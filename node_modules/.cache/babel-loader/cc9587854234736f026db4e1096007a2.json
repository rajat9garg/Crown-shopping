{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedCount, cartItem) => accumalatedCount + cartItem.quantity, 0));\nexport const selectCartItemTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedCount, cartItem) => accumalatedCount + cartItem.quantity * cartItem.price, 0));\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);","map":{"version":3,"sources":["/home/kingsman/Documents/projects/react/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumalatedCount","cartItem","quantity","selectCartItemTotal","price","selectCartHidden","hidden"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CAACE,MAAV,CAAiB,CAACC,gBAAD,EAAmBC,QAAnB,KACfD,gBAAgB,GAAGC,QAAQ,CAACC,QAD9B,EACwC,CADxC,CAH8C,CAA3C;AAOP,OAAO,MAAMC,mBAAmB,GAAGX,cAAc,CAC/C,CAACI,eAAD,CAD+C,EAE9CC,SAAD,IACEA,SAAS,CAACE,MAAV,CAAiB,CAACC,gBAAD,EAAmBC,QAAnB,KACfD,gBAAgB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KADlD,EACyD,CADzD,CAH6C,CAA1C;AAOP,OAAO,MAAMC,gBAAgB,GAAGb,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEzCE,IAAD,IAAUA,IAAI,CAACW,MAF2B,CAAvC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = (state) => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce((accumalatedCount, cartItem) => \n      accumalatedCount + cartItem.quantity, 0)\n);\n\nexport const selectCartItemTotal = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce((accumalatedCount, cartItem) => \n      accumalatedCount + cartItem.quantity * cartItem.price, 0)\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    (cart) => cart.hidden\n)"]},"metadata":{},"sourceType":"module"}